---

############# Install #############

- name: Adding key 573E3D1C51AE1B3D (spideroak)
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 573E3D1C51AE1B3D

- name: Adding Ubuntu repository http://apt.spideroak.com/ubuntu-spideroak-hardy/
  apt_repository:
    repo: deb http://apt.spideroak.com/ubuntu-spideroak-hardy/ release restricted
    state: present

- name: Installing packages 
  package:
     name: "{{ item }}"
     state: present
  with_items:
     - spideroakone

- name: Template installer json
  template:
    src: install.json.j2
    dest: ./install.json

- name: Register device
  command: SpiderOakONE --setup=./install.json
  args:
    creates: "{{ ansible_env['HOME'] }}/.config/SpiderOakONE/config.txt"
  register: spideroakone_install_result
  failed_when: "'failed' in spideroakone_install_result.stdout|lower"

- debug:
    msg: "Install result: {{ spideroakone_install_result.stdout }}"

############# Service #############

- name: Check dir /usr/lib/systemd/system/
  file:
    path: /usr/lib/systemd/system/
    state: directory

- name: Check dir /usr/lib/systemd/scripts/
  file:
    path: /usr/lib/systemd/scripts/
    state: directory

- name: Configuring Autostart 
  template:
    src: templates/spideroak.service.j2
    dest: /usr/lib/systemd/system/spideroak.service
    owner: root
    group: root

- name: Configuring Autostart /usr/lib/systemd/system/spideroak.service
  template:
    src: templates/spideroak.service.j2
    dest: /usr/lib/systemd/system/spideroak.service
    owner: root
    group: root

- name: Configuring Autostart /usr/lib/systemd/scripts/spideroak
  template:
    src: templates/spideroak.sh.j2
    dest:  /usr/lib/systemd/scripts/spideroak
    owner: root
    group: root
    mode: 0755

- name: Configuring Autostart spideroak.rc.j2
  template:
    src: templates/spideroak.rc.j2
    dest:  "{{ ansible_env.HOME }}/.spideroak.rc"
    owner: root
    group: root

- name: Enable Service
  systemd:
    name: spideroak
    enabled: yes
    masked: no

############# Application Actions #############

- name: Stopping spideroak (otherwise SpiderOakONE command will fail with "program is already running, taking no action")
  systemd: state=stopped name=spideroak

- name: Create restore directories
  file:
    path: "{{ item.path | dirname  }}"
    state: directory
  with_items: "{{ spideroakone_restores }}"
  when: spideroakone_restore_files

- name: Restore files
  command: SpiderOakONE -o {{ item.path | dirname  }} --restore  {{ item.path }}
  #command: SpiderOakONE --device {{ item.device }} -o  {{ item.path | dirname  }} --restore  {{ item.path }}
  with_items: "{{ spideroakone_restores }}"
  register: spideroakone_restore_result
  when: spideroakone_restore_files and not spideroakone_restore_use_point_in_time

- name: Restore files with --point-in-time 
  command: SpiderOakONE -o {{ item.path | dirname  }} --restore  {{ item.path }} --point-in-time {{ spideroakone_restore_point_in_time }}
  with_items: "{{ spideroakone_restores }}"
  register: spideroakone_restore_result
  when: spideroakone_restore_files and spideroakone_restore_use_point_in_time

- debug:
    msg: SpiderOakONE -o  {{ item.path | dirname  }} --restore  {{ item.path }}
  with_items: "{{ spideroakone_restores }}"
  when: spideroakone_restore_files

- debug:
    msg: "Restore result: {{ spideroakone_restore_result }}"
  when: spideroakone_restore_files

- name: Reset Selection to support removal of files/folders
  command: SpiderOakONE --reset-selection --force

- name: Include dirs
  command: SpiderOakONE --include-dir {{ item }} --force
  with_items: "{{ spideroakone_backup_include_dir }}"
  register: include_dir_result

- name: Fail if result does not contain "Including"
  fail:
    msg: "The command ({{ item.cmd }}) failed"
  when: '"Including" not in item.stdout'
  with_items: "{{ include_dir_result.results }}"

- name: Include file
  command: SpiderOakONE --include-file {{ item }} --force
  with_items: "{{ spideroakone_backup_include_file }}"
  register: include_file_result

- name: Fail if result does not contain "Including"
  fail:
    msg: "The command ({{ item.cmd }}) failed"
  when: '"Including" not in item.stdout'
  with_items: "{{ include_file_result.results }}"

- name: Exclude dirs
  command: SpiderOakONE --exclude-dir {{ item }} --force
  with_items: "{{ spideroakone_backup_exclude_dir }}"

- name: Exclude file
  command: SpiderOakONE --exclude-file {{ item }} --force
  with_items: "{{ spideroakone_backup_exclude_file }}"


- name: Start spideroak
  systemd: state=started name=spideroak